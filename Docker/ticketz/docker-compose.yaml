networks:
  ticketz:
  nginx-proxy:

volumes:
  redis_data:
  postgres_data:
  backend_public:
  backend_private:
  pgadmin_data:
    
services:
  backend:
    image: hotzizle/ticketz-backend:latest
    volumes:
      - backend_public:/usr/src/app/public
      - backend_private:/usr/src/app/private
    env_file:
      - .env-backend
    restart: always
    depends_on:
      - postgres
      - redis
    networks:
      - ticketz

  frontend:
    image: hotzizle/ticketz-frontend:latest
    volumes:
      - backend_public:/var/www/backend-public
    env_file:
      - .env-frontend
    restart: always
    depends_on:
      - backend
    networks:
      - ticketz

  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-postgrest.sql:/docker-entrypoint-initdb.d/init-postgrest.sql
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-ticketz}
      - POSTGRES_DB=${POSTGRES_DB:-ticketz}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ticketz}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=${TZ:-UTC}
    expose:
      - 5432
    restart: always
    networks:
      - ticketz

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    expose:
      - 6379
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - ticketz

  postgrest:
    image: postgrest/postgrest:v12.2.0
    env_file:
      - .env-postgrest
    depends_on:
      - postgres
    ports:
      - "${POSTGREST_PORT:-3001}:3000"
    restart: always
    networks:
      - ticketz

  cloudflared:
    image: cloudflare/cloudflared
    restart: always
    command: tunnel run
    env_file:
      - .env-cloudflared
    networks:
      - ticketz

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8081:80"
    restart: always
    networks:
      - ticketz
